---
import { Icon } from '@astrojs/starlight/components'

interface Props {
  label: string
  value: string
  icon: Parameters<typeof Icon>[0]['name']
  width?: string
  options: Array<{
    label: string
    value: string
    icon: Parameters<typeof Icon>[0]['name']
    selected: boolean
  }>
}
---

<label style={`--sl-select-width: ${Astro.props.width}`}>
  <span class="sr-only">{Astro.props.label}</span>
  <Icon name={Astro.props.icon} class="icon label-icon" />
  <select value={Astro.props.value}>
    {
      Astro.props.options.map(({ value, selected, label }) => (
        <option value={value} selected={selected} set:html={label} />
      ))
    }
  </select>
  <!-- <div style="display: flex; flex-direction: column; justify-content: center; align-items: center;" class="icon">
    <Icon name="up-caret" class="caret" />
    <Icon name="down-caret" class="caret" />
  </div> -->
  <svg
    width="15"
    height="15"
    viewBox="0 0 15 15"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    class="h-4 w-4 opacity-50"
    aria-hidden="true"
    ><path
      d="M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z"
      fill="currentColor"
      fill-rule="evenodd"
      clip-rule="evenodd"
      data-darkreader-inline-fill=""
      style="--darkreader-inline-fill: currentColor;"></path></svg
  >
</label>

<style>
  label {
    --sl-label-icon-size: 0.875rem;
    --sl-caret-size: 1.25rem;
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: var(--sl-color-gray-1);
  }

  label:hover {
    color: var(--sl-color-gray-2);
  }

  .icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .label-icon {
    font-size: var(--sl-label-icon-size);
    inset-inline-start: 0;
  }

  .caret {
    font-size: var(--sl-caret-size);
    inset-inline-end: 0;
  }

  select {
    border: 0;
    padding-block: 0.625rem;
    padding-inline: calc(var(--sl-label-icon-size) + 0.25rem) calc(var(--sl-caret-size) + 0.25rem);
    width: var(--sl-select-width);
    background-color: transparent;
    text-overflow: ellipsis;
    color: inherit;
    cursor: pointer;
    appearance: none;
  }

  option {
    background-color: var(--sl-color-bg-nav);
    color: var(--sl-color-gray-1);
  }

  @media (min-width: 50rem) {
    select {
      font-size: var(--sl-text-sm);
    }
  }
</style>
